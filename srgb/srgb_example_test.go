package srgb_test

import (
	"fmt"
	"github.com/mandykoh/prism/srgb"
)

func ExampleConvert8BitToLinear_generateLUT() {
	lut := [256]float32{}
	for i := range lut {
		lut[i] = srgb.Convert8BitToLinear(uint8(i))
	}

	fmt.Printf("[256]float32{")
	for i, v := range lut {
		if i%8 == 0 {
			fmt.Printf("\n\t")
		}
		fmt.Printf(" %v,", v)
	}
	fmt.Printf("\n}\n")

	// Output: [256]float32{
	//	 0, 0.000303527, 0.000607054, 0.000910581, 0.001214108, 0.001517635, 0.001821162, 0.0021246888,
	//	 0.002428216, 0.0027317428, 0.00303527, 0.0033465358, 0.0036765074, 0.004024717, 0.004391442, 0.0047769533,
	//	 0.0051815165, 0.0056053917, 0.006048833, 0.0065120906, 0.00699541, 0.007499032, 0.008023193, 0.008568126,
	//	 0.009134059, 0.009721218, 0.010329823, 0.010960094, 0.011612245, 0.012286488, 0.0129830325, 0.013702083,
	//	 0.014443844, 0.015208514, 0.015996294, 0.016807375, 0.017641954, 0.01850022, 0.019382361, 0.020288562,
	//	 0.02121901, 0.022173885, 0.023153367, 0.024157632, 0.02518686, 0.026241222, 0.027320892, 0.02842604,
	//	 0.029556835, 0.030713445, 0.031896032, 0.033104766, 0.034339808, 0.035601314, 0.03688945, 0.038204372,
	//	 0.039546236, 0.0409152, 0.04231141, 0.04373503, 0.045186203, 0.046665087, 0.048171826, 0.049706567,
	//	 0.051269457, 0.052860647, 0.054480277, 0.05612849, 0.05780543, 0.059511237, 0.061246052, 0.063010015,
	//	 0.064803265, 0.06662594, 0.06847817, 0.070360094, 0.07227185, 0.07421357, 0.07618538, 0.07818742,
	//	 0.08021982, 0.08228271, 0.08437621, 0.08650046, 0.08865558, 0.09084171, 0.093058966, 0.09530747,
	//	 0.09758735, 0.099898726, 0.10224173, 0.104616486, 0.107023105, 0.10946171, 0.11193243, 0.114435375,
	//	 0.116970666, 0.11953843, 0.122138776, 0.12477182, 0.12743768, 0.13013647, 0.13286832, 0.13563333,
	//	 0.13843161, 0.14126329, 0.14412847, 0.14702727, 0.14995979, 0.15292615, 0.15592647, 0.15896083,
	//	 0.16202937, 0.1651322, 0.1682694, 0.17144111, 0.1746474, 0.17788842, 0.18116425, 0.18447499,
	//	 0.18782078, 0.19120169, 0.19461784, 0.19806932, 0.20155625, 0.20507874, 0.20863687, 0.21223076,
	//	 0.2158605, 0.2195262, 0.22322796, 0.22696587, 0.23074006, 0.23455058, 0.23839757, 0.24228112,
	//	 0.24620132, 0.25015828, 0.2541521, 0.25818285, 0.26225066, 0.2663556, 0.2704978, 0.2746773,
	//	 0.27889428, 0.28314874, 0.28744084, 0.29177064, 0.29613826, 0.30054379, 0.3049873, 0.30946892,
	//	 0.31398872, 0.31854677, 0.3231432, 0.3277781, 0.33245152, 0.33716363, 0.34191442, 0.34670407,
	//	 0.3515326, 0.35640013, 0.3613068, 0.3662526, 0.3712377, 0.37626213, 0.38132602, 0.38642943,
	//	 0.39157248, 0.39675522, 0.40197778, 0.4072402, 0.4125426, 0.41788507, 0.42326766, 0.4286905,
	//	 0.43415365, 0.43965718, 0.4452012, 0.4507858, 0.45641103, 0.462077, 0.4677838, 0.47353148,
	//	 0.47932017, 0.48514995, 0.49102086, 0.49693298, 0.5028865, 0.50888133, 0.5149177, 0.52099556,
	//	 0.5271151, 0.5332764, 0.5394795, 0.54572445, 0.55201143, 0.5583404, 0.5647115, 0.57112485,
	//	 0.57758045, 0.58407843, 0.59061885, 0.59720176, 0.60382736, 0.61049557, 0.6172066, 0.6239604,
	//	 0.63075715, 0.63759685, 0.6444797, 0.65140563, 0.65837485, 0.6653873, 0.67244315, 0.6795425,
	//	 0.6866853, 0.69387174, 0.7011019, 0.70837575, 0.7156935, 0.7230551, 0.73046076, 0.7379104,
	//	 0.7454042, 0.7529422, 0.7605245, 0.76815116, 0.7758222, 0.7835378, 0.7912979, 0.7991027,
	//	 0.80695224, 0.8148466, 0.82278574, 0.8307699, 0.838799, 0.8468732, 0.8549926, 0.8631572,
	//	 0.8713671, 0.8796224, 0.8879231, 0.8962694, 0.9046612, 0.91309863, 0.92158186, 0.9301109,
	//	 0.9386857, 0.9473065, 0.9559733, 0.9646863, 0.9734453, 0.9822506, 0.9911021, 1,
	//}
}

func ExampleConvertLinearTo8Bit_generateLUT() {
	lut := [512]uint8{}
	for i := range lut {
		lut[i] = srgb.ConvertLinearTo8Bit(float32(i) / 511)
	}

	fmt.Printf("[512]uint8{")
	for i, v := range lut {
		if i%16 == 0 {
			fmt.Printf("\n\t")
		}
		fmt.Printf(" %d,", v)
	}
	fmt.Printf("\n}\n")

	// Output: [512]uint8{
	//	 0, 6, 13, 18, 22, 25, 28, 31, 34, 36, 38, 40, 42, 44, 46, 48,
	//	 50, 51, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70,
	//	 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	//	 86, 87, 88, 89, 90, 91, 91, 92, 93, 94, 95, 95, 96, 97, 98, 98,
	//	 99, 100, 101, 101, 102, 103, 103, 104, 105, 106, 106, 107, 108, 108, 109, 110,
	//	 110, 111, 111, 112, 113, 113, 114, 115, 115, 116, 116, 117, 118, 118, 119, 119,
	//	 120, 121, 121, 122, 122, 123, 123, 124, 125, 125, 126, 126, 127, 127, 128, 128,
	//	 129, 129, 130, 130, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137,
	//	 137, 138, 138, 139, 139, 140, 140, 140, 141, 141, 142, 142, 143, 143, 144, 144,
	//	 145, 145, 146, 146, 147, 147, 147, 148, 148, 149, 149, 150, 150, 151, 151, 151,
	//	 152, 152, 153, 153, 154, 154, 154, 155, 155, 156, 156, 156, 157, 157, 158, 158,
	//	 159, 159, 159, 160, 160, 161, 161, 161, 162, 162, 163, 163, 163, 164, 164, 165,
	//	 165, 165, 166, 166, 166, 167, 167, 168, 168, 168, 169, 169, 169, 170, 170, 171,
	//	 171, 171, 172, 172, 172, 173, 173, 174, 174, 174, 175, 175, 175, 176, 176, 176,
	//	 177, 177, 177, 178, 178, 179, 179, 179, 180, 180, 180, 181, 181, 181, 182, 182,
	//	 182, 183, 183, 183, 184, 184, 184, 185, 185, 185, 186, 186, 186, 187, 187, 187,
	//	 188, 188, 188, 189, 189, 189, 190, 190, 190, 191, 191, 191, 192, 192, 192, 193,
	//	 193, 193, 193, 194, 194, 194, 195, 195, 195, 196, 196, 196, 197, 197, 197, 198,
	//	 198, 198, 198, 199, 199, 199, 200, 200, 200, 201, 201, 201, 201, 202, 202, 202,
	//	 203, 203, 203, 204, 204, 204, 204, 205, 205, 205, 206, 206, 206, 206, 207, 207,
	//	 207, 208, 208, 208, 208, 209, 209, 209, 210, 210, 210, 210, 211, 211, 211, 212,
	//	 212, 212, 212, 213, 213, 213, 214, 214, 214, 214, 215, 215, 215, 215, 216, 216,
	//	 216, 217, 217, 217, 217, 218, 218, 218, 218, 219, 219, 219, 220, 220, 220, 220,
	//	 221, 221, 221, 221, 222, 222, 222, 222, 223, 223, 223, 224, 224, 224, 224, 225,
	//	 225, 225, 225, 226, 226, 226, 226, 227, 227, 227, 227, 228, 228, 228, 228, 229,
	//	 229, 229, 229, 230, 230, 230, 230, 231, 231, 231, 231, 232, 232, 232, 232, 233,
	//	 233, 233, 233, 234, 234, 234, 234, 235, 235, 235, 235, 236, 236, 236, 236, 237,
	//	 237, 237, 237, 238, 238, 238, 238, 239, 239, 239, 239, 239, 240, 240, 240, 240,
	//	 241, 241, 241, 241, 242, 242, 242, 242, 243, 243, 243, 243, 243, 244, 244, 244,
	//	 244, 245, 245, 245, 245, 246, 246, 246, 246, 246, 247, 247, 247, 247, 248, 248,
	//	 248, 248, 249, 249, 249, 249, 249, 250, 250, 250, 250, 251, 251, 251, 251, 251,
	//	 252, 252, 252, 252, 253, 253, 253, 253, 253, 254, 254, 254, 254, 255, 255, 255,
	//}
}
